var d3 = require('d3'), 
jsdom = require('jsdom'),
logger=require('logger'),
controller =require('controller')
dataviz='<div id="dataviz-container"></div>';


module.exports={
	chart : function(var_data,var_width,res) {
			jsdom.env(
				dataviz,
				function(errors, window) {
					var diameter = var_width,
						format = d3.format(",d");
					var pack = d3.layout.pack()
							    .size([diameter - 4, diameter - 4])
							    .value(function(d) { return d.fSource+d.fTarget; });
					var el = window.document.querySelector('#dataviz-container');

					for (i in var_data) {
						
						if (var_data[i].children.length <= 0) {

							pack = d3.layout.pack()
							    .size([diameter - 4, diameter - 4])
							    .value(function(d) { return 100; });

							

							var svg = d3.select(el).append("svg")
							    .attr("preserveAspectRatio", "xMinYMin meet")
								 .attr("viewBox", "0 0 "+(diameter*3)+" "+diameter)
							  .append("g")
							    .attr("transform", "translate(2,2)");

							root=var_data[i];
							var node = svg.datum(root).selectAll(".node")
							  .data(pack.nodes)
							.enter().append("g")
							  .attr("class", function(d) { return "node"})
							  .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

							node.append("title")
							  .text(function(d) { return d.label});

							node.append("circle")
							  .attr("r", function(d) { return d.r; })
							  .style("opacity", "0.3");

							node.append("text")
							  .style("text-anchor", "middle")
							  .style("font-size", "22px")
							  .text(function(d) { return d.label; });
						}
						else {
							data=var_data[i];

							var svg = d3.select(el).append("svg")
							    .attr("preserveAspectRatio", "xMinYMin meet")
								 .attr("viewBox", "0 0 "+(diameter*3)+" "+diameter)
							  .append("g")
							    .attr("transform", "translate(2,2)");

							root=data;
							var node = svg.datum(root).selectAll(".node")
							  .data(pack.nodes)
							.enter().append("g")
							  .attr("class", function(d) { return d.children ? "node" : "leaf node"; })
							  .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

							node.append("title")
							  .text(function(d) { return d.label + (d.children ? "" : ": " + format(d.fSource+d.fTarget)); });

							node.append("circle")
							  .attr("r", function(d) { return d.r; })
							  .style("opacity", "0.3");

							node.append("text")
							  .attr("dy", function(d) { return d.children ? ".0em" : ".3em"; })
							  .style("font-size", function(d) { return d.children ? "22px" : "16px"; })
							  .style("text-anchor", "middle")
							  .text(function(d) { return d.label; });
						}

					//d3.select(self.frameElement).style("height", diameter + "px");
					}

					var svgsrc = window.document.querySelector('#dataviz-container').innerHTML;
					controller.embeddedCircle(res, svgsrc);
			}
			);
	}
	
}